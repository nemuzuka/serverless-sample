<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name=”robots” content=”noindex”>
<title>Serverless Framework with Express</title>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.6.2/css/bulma.min.css">
<link rel="shortcut icon" href="https://s3-ap-northeast-1.amazonaws.com/vss-sample-cdn/icon/favicon.ico" type="image/vnd.microsoft.icon">
<script defer src="https://use.fontawesome.com/releases/v5.0.0/js/all.js"></script>
<script src="https://sdk.amazonaws.com/js/aws-sdk-2.182.0.min.js"></script>
<script src="https://s3-ap-northeast-1.amazonaws.com/vss-sample-cdn/aws/amazon-cognito/amazon-cognito.min.js"></script>
<script src="https://s3-ap-northeast-1.amazonaws.com/vss-sample-cdn/aws/amazon-cognito-identity-js/aws-cognito-sdk.min.js"></script>
<script src="https://s3-ap-northeast-1.amazonaws.com/vss-sample-cdn/aws/amazon-cognito-identity-js/amazon-cognito-identity.min.js"></script>

<script>

AWS.config.region = '<%= REGION %>';

AWSCognito.config.region = '<%= REGION %>';
var POOL_DATA = {
    UserPoolId : '<%= USER_POOL_ID %>',
    ClientId : '<%= CLIENT_ID %>'
};
var USER_POOL = new AWSCognito.CognitoIdentityServiceProvider.CognitoUserPool(POOL_DATA);

/**
 * ログイン済みかチェックする.
 * - 未ログインの場合、ログイン画面に遷移します
 * - ログイン済みの場合、ユーザに紐づくCredentialsを生成します
 */
function validLogin(callBack) {
  var cognitoUser = USER_POOL.getCurrentUser();
  if(cognitoUser == null) {
    return moveToLogin();
  }

  cognitoUser.getSession(function(error, session) {
    if (error != null) {
      alert(error);
      return moveToLogin();
    }

    AWS.config.credentials = new AWS.CognitoIdentityCredentials({
      IdentityPoolId: '<%= IDENTITY_POOL_ID %>',
      Logins: {
        'cognito-idp.<%= REGION %>.amazonaws.com/<%= USER_POOL_ID %>': session.getIdToken().getJwtToken()
      }
    });
    callBack(session);
  });
}

/**
 * ログイン画面遷移
 */
function moveToLogin() {
  alert("お手数ですがログインしてください");
  location = "/";
}

/**
 * 値取得.
 */
function getValue(dataset, key, callBack) {
  dataset.get(key, function(err, value){
    if (err) { alert(err); return; }
    if(typeof(value) === "undefined") {return;}
    callBack(value);
  });
}

/**
 * 値取得.
 */
function putValue(dataset, key, value, callBack) {
  dataset.put(key, value, function(err, value){
    if (err) { alert(err); return; }
    dataset.synchronize({
      onSuccess: function(dataset, newRecords) {
        callBack();
      }
    });
  });
}


</script>
